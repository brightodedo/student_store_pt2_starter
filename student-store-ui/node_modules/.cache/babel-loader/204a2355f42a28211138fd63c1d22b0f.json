{"ast":null,"code":"import axios from 'axios';\n\nclass ApiClient {\n  constructor(remoteHostUrl) {\n    this.remoteHostUrl = remoteHostUrl;\n    this.token = null;\n    this.tokenName = \"student_token\";\n  }\n\n  setToken(token) {\n    this.token = token;\n    localStorage.setItem(this.tokenName, token);\n  }\n\n  async request({\n    endpoint,\n    method = `GET`,\n    data = {}\n  }) {\n    const url = `${this.remoteHostUrl}/${endpoint}`;\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n\n    if (this.token) {\n      headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n\n    try {\n      const res = await axios({\n        url,\n        method,\n        data,\n        headers\n      });\n      return {\n        data: res.data,\n        error: null\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$, _error$response2, _error$response2$data, _error$response2$data2;\n\n      console.error({\n        errorResponse: error.response\n      });\n      console.log(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message);\n      const message = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message;\n      return {\n        data: null,\n        error: message || String(error)\n      };\n    }\n  } // async fetchUserFromToken(){\n  //     return await this.request({endpoint :`auth/me` , method : `GET`})\n  // }\n\n\n  async login(credentials) {\n    return await this.request({\n      endpoint: `auth/login`,\n      method: `POST`,\n      data: credentials\n    });\n  }\n\n  async signup(credentials) {\n    return await this.request({\n      endpoint: `auth/register`,\n      method: `POST`,\n      data: credentials\n    });\n  }\n\n  async me() {\n    return await this.request({\n      endpoint: `auth/me`,\n      method: `GET`,\n      data: {}\n    });\n  }\n\n  async fetchProducts() {\n    return await this.request({\n      endpoint: `/store`,\n      method: `GET`,\n      data: {}\n    });\n  } // async nutrition(){\n  //     return await this.request({endpoint: `nutrition`,\n  //     method : `GET`, data : {}\n  //     })\n  // }\n  // async createNutrition(credentials){\n  //     return await this.request({endpoint: `nutrition`,\n  // method : `POST`, data : credentials})\n  // }\n  // async logoutUser(){\n  //     this.setToken(null)\n  //     localStorage.setItem(this.tokenName, \"\")\n  // }\n\n\n} //http://localhost:3001\n\n\nexport default new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\");","map":{"version":3,"sources":["/Users/macuser/Desktop/codepath/week5/lab1/student_store_pt2_starter/student-store-ui/src/services/apiClient.js"],"names":["axios","ApiClient","constructor","remoteHostUrl","token","tokenName","setToken","localStorage","setItem","request","endpoint","method","data","url","headers","res","error","console","errorResponse","response","log","message","String","login","credentials","signup","me","fetchProducts","process","env","REACT_APP_REMOTE_HOST_URL"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nclass ApiClient{\n    constructor(remoteHostUrl){\n        this.remoteHostUrl = remoteHostUrl\n        this.token = null\n        this.tokenName = \"student_token\"\n    }   \n\n    setToken(token){\n        this.token=token\n        localStorage.setItem(this.tokenName, token)\n    }\n\n    async request({endpoint, method =  `GET`, data={}}){\n        const url = `${this.remoteHostUrl}/${endpoint}`\n\n        const headers = {\n            \"Content-Type\" : \"application/json\"\n        }\n\n        if(this.token){\n            headers[\"Authorization\"] = `Bearer ${this.token}`\n        }\n\n        try{\n            const res = await axios({url, method, data, headers})\n            return {data : res.data, error : null}\n        }\n        catch(error){\n            console.error({errorResponse : error.response})\n            console.log(error?.response?.data?.error?.message)\n            const message = error?.response?.data?.error?.message\n            return {data : null, error : message || String(error)}\n        }\n    }\n\n    // async fetchUserFromToken(){\n    //     return await this.request({endpoint :`auth/me` , method : `GET`})\n    // }\n\n\n    async login(credentials){\n        return await this.request({endpoint: `auth/login`,\n        method : `POST`, data : credentials\n        })\n    }\n\n    async signup(credentials){\n        return await this.request({endpoint: `auth/register`,\n        method : `POST`, data : credentials\n        })\n    }\n\n    async me(){\n        return await this.request({endpoint: `auth/me`,\n        method : `GET`, data : {}\n        }) \n    }\n\n    async fetchProducts(){\n        return await this.request({endpoint: `/store`,\n        method : `GET`, data : {}\n        }) \n    }\n\n    // async nutrition(){\n    //     return await this.request({endpoint: `nutrition`,\n    //     method : `GET`, data : {}\n    //     })\n    // }\n\n    // async createNutrition(credentials){\n    //     return await this.request({endpoint: `nutrition`,\n    // method : `POST`, data : credentials})\n    // }\n\n    // async logoutUser(){\n    //     this.setToken(null)\n    //     localStorage.setItem(this.tokenName, \"\")\n    // }\n}\n\n//http://localhost:3001\nexport default new ApiClient(process.env.REACT_APP_REMOTE_HOST_URL || \"http://localhost:3001\")"]},"metadata":{},"sourceType":"module"}